{"pages":[{"url":"http://lele1122.github.io/Me.html","text":"Hey, what's up? I'm Jiahao, a fresh graduate from National University of Singapore. Email:jiahao0516@gmail.com","tags":"About","title":"About"},{"url":"http://lele1122.github.io/haze-zh_CN.html","text":"来新加坡已经将近5年了。期间心情有好有坏，就像曾经所写的博客一样，在忙碌中不知不觉的长草忘却。转眼间，自己都已经毕业了，回顾过去，有些事情还是那么的相似。无论在屋内心情如何，每次出门，新加坡的天气却让人精神振奋。蓝天白云，让长期在中国雾霾下成长的感慨蓝天是外国的蓝。 我记得在来新加坡的前几个月，我还因为看了一段鞭刑的视频说到长大不会前往新加坡，这个国家的刑法过于恐怖。可话说没多久，不知不觉的进了前往新加坡学习的项目。就像一个多月前，我看着新加坡本地论坛上有人二手售卖着空气净化器，对一旁的女朋友说：\"在新加坡还有人往家里买空气净化器？搞笑呢。\" 搞笑的却是没过多久，新加坡就被印尼烧芭所引发的森林大火产生的烟霾覆盖。空气中所弥漫的焦味即便在门窗关紧的室内都能闻到。从家中窗口望出去，楼下的公园几乎成为\"仙境\": 上图为烟霾前，下图为烟霾后 出于无奈，只好上网购买了N95口罩。有时候不得不感慨新加坡物价之贵，好多东西自己网上从中国快递买来都能比楼下超市购买便宜一倍。可以理解新加坡食物贵，但各种电子，生活产品为何如此之贵，有时甚至比其他地区贵上一倍，让好多人不得不从美亚或者淘宝购买，费解。 茶余饭后，再也不能轻松的去楼下跑跑步，散散心；也不能开着窗呼吸新鲜空气；甚至不能拉开窗帘，因为小小的缝隙让屋外的焦味肆意侵入。 唯一庆幸的是父母来的日子。他们好不容易有机会能出国感受国内看不到的蓝天白云，幸亏没在这段时间过来。","tags":"Self","title":"烟霾"},{"url":"http://lele1122.github.io/markdown-tips-zh-CN.html","text":"关于页面内跳转 定义一个锚(id)： <span id=\"jump\">跳转到的地方</span> 使用markdown语法： [点击跳转](#jump) 举例 跳到[底部](#end) ... ... ... <h3 id= \"end\" > 底部 </h2> 跳到 底部 底部","tags":"Code","title":"Markdown Tips"},{"url":"http://lele1122.github.io/pelican-settings-en-US.html","text":"Disqus Comments feature can be added by Disqus . If you do not have it, just register an account and set by steps. Add the following command in pelicanconf.py : $ DISQUS_SITENAME = 'shortname' At first I tried several times but the function did not work. The reason is that I ignored the SITEURL . To enable the comments feature, even you do not have a domain, you need to add the github page url: S$ ITEURL = 'http://username.github.io' Theme If you want to use themes other than the default one, you need to download the themes you want first. There is one way: $ cd blog $ git clone https://github.com/getpelican/pelican-themes.git $ cd pelican-themes It seems that some themes are lost when I clone them from pelican github, so it will be better to check the folders before using them. You can always download themes online and put them in the folder you want. Then, you can choose the themes you have in the pelican-themes folder. To change the theme, you need to configure in pelicanconf.py .For example: $ THEME = '/Users/User/Blog/pelican-themes/elegant' Search The theme elegent v1.3 should have included the following search engin plugin. Tipue Search , an open source site search engine jQuery plugin available under the MIT License , is used in my theme. BeautifulSoup is required to use this plugin: $ sudo pip install beautifulsoup4 The latest Tipue Search is version 5.0. If you meet any problem with the search, please replace the default version with the newest version in Tipue Search . The format may change because of the replacement, so you may need to modify the tipuesearch.css file or just use the default version. By the test, I found the main problem the all the results are undefined may be caused by default tipuesearch_set.js file in this theme. Plugins Easiest way to install and use these plugins is cloning this repo: $ git clone --recursive https://github.com/getpelican/pelican-plugins and activating the ones you want in your settings file: $ PLUGIN_PATHS = [ '/Users/User/Blog/pelican-plugins' ] $ PLUGINS = [ 'tipue_search' ] The detail of plugins can be read from on GitHub . Pages If you create a folder named pages , all the files in this folder will be static pages. All the pages can be added to the menu By setting DISPLAY_PAGES_ON_MENU in pelicanconf.py .","tags":"Code","title":"Introduction to Pelican (2)"},{"url":"http://lele1122.github.io/pelican-intro-en-US.html","text":"Overview This is my first time to use GitHub and Pelican to creating a personal website (blog page). The whole progress was made on Mac OS X, although I tried on the Windows 7 first. It proved it would be much more convenient if you tried on Mac. Preparation If this is your first time to use terminal, it will be better to get some basic knowledge about it. Google is always your good teachers and friends! Github should also be learnt if you do not want to be massed with the git codes. Here are some recommended websites: Terminal Introduction to the Mac OS X Command Line Terminal Cheatsheet for Mac (basics) GitHub GitHub教程 (zh-CN) git-scm (En) git-scm (zh-CN) You need to register a GitHub account before the Pelican Setup. A repository named username.github.io should also be created. To reduce trouble, README file is not recommended to be created for the beginner of GitHub. They will be used in Chapter Pelican Setup . Configure local environment You will also need to install some basic package before this tutorial. I presume most latest Mac OS X come with Python.It may require administrator password for $ sudo . Install pip: $ sudo python get-pip.py Install Pelican (most important) and Markdown (to support .md ): $ sudo pip install pelican $ sudo pip install markdown Some people may have ValueError because of the unicode. You can check weather your terminal environment is in UTF-8 by $ locale . If not, you can temporarily change it by: $ export LC_ALL = en_US.UTF-8 $ export LANG = en_US.UTF-8 Pelican Setup Create a local folder for the blog: $ mkdir blog #you can decide the name you want $ cd blog Initialise the blog: $ pelican-quickstart Just follow the steps to initialize: $ pelican-quickstart Where do you want to create your new web site? [ . ] What will be the title of this web site? > <GitHub username> e.g. abc123 Who will be the author of this web site? > <name you want to use> e.g John What will be the default language of this web site? [ en ] Do you want to specify a URL prefix? e.g., http://example.com ( Y/n ) What is your URL prefix? ( see above example ; no trailing slash ) > http://username.github.io Do you want to enable article pagination? ( Y/n ) How many articles per page do you want? [ 5 ] Do you want to generate a Fabfile/Makefile to automate generation and publishing? ( Y/n ) Do you want an auto-reload & simpleHTTP script to assist with theme and site development? ( Y/n ) Do you want to upload your website using FTP? ( y/N ) Do you want to upload your website using SSH? ( y/N ) Do you want to upload your website using Dropbox? ( y/N ) Do you want to upload your website using S3? ( y/N ) Do you want to upload your website using Rackspace Cloud Files? ( y/N ) If you want to take a look of the tree structure of the generated files, please install Homebrew and tree: $ ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" $ brew install tree Then you can use command $ tree to read the folder like this: blog/ ├── content ├── output ├── develop_server.sh ├── Makefile ├── pelicanconf.py └── publishconf.py Writing articles The default folder for writing articles are set in the /blog/content , which can be configured in pelicanconf.py if you want. In this tutorial, the article ( .md file)is put in content . Pelican needs metadata like Title (must), Date (optional) and other optional information for smart settings. For example: Title : Introduction to Creating GitHub Pages with Pelican Date : 2015 - 09 - 13 21 : 07 Modified : 2015 - 09 - 13 21 : 07 Category : Coding Tags : GitHub , Pelican , Markdown Slug : Blog Authors : Joe Summary : Creating Blog Here is the content you want to write in Markdown style .... To generate the site locally, you can run command: $ make devserver It serves your site to http://localhost:8000 . You can preview the website locally first. Or you can just generate html without testing $ make html No matter which method you choose, some .html file will be generated in folder output . To debug easily and for the future convenient, I recommend to new a folder under blog, e.g. /blog/gitblog and copy the files in output to this folder. Why? I will explain later. Upload the pages Since all the html files are prepared, we only need to upload them to our GitHub. These part should be done after you have a basic knowledge of GitHub . If you have already created README file in GitHub, you may need to add $ git pull origin master before $ git add . . $ cd gitblog $ git init $ git remote add origin https://github.com/username/username.github.io $ git add . $ git commit -m \"first commit\" $ git push -u origin master You may need to input GitHub username and passward if you do not use SSH key introduced in Chapter GitHub . If no error, you can visit you blog by username.github.io. Modify and update pages The reason to create another folder instead using output to upload pages is that every time you use $ make html , output will be replaced with new files. Thus, it would be better to copy the files from output into gitblog before uploading. Here is some commands for delete and update files: $ git rm ×××.html $ git add . $ git commit -m \"some message\" $ git push -u origin master Summary This article is only the introduction of setting up a personal blog by using GitHub and Pelican . Since this is my first time to use it, some condition my not be covered. Please comment below if there is any error.","tags":"Code","title":"Introduction to Pelican (1)"}]}